name: Create a Github release
on:
  workflow_dispatch:
    inputs:
      commit_sha:
          description: 'The release commit'     
          required: true
env:
  GIT_USER_NAME: amplify-android-dev+ghops
  GIT_USER_EMAIL: amplify-android-dev+ghops@amazon.com
jobs:      
  get_commit_sha:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.determine_commit_source.outputs.commit_sha }}
    steps:
      - id: determine_commit_source
        run: |
          if [[ "${{ github.event_name }}" = "pull_request" ]] 
          then
            echo "Pull from PR event"
            echo "::set-output name=commit_sha::${{ github.event.pull_request.merge_commit_sha }}"
          else
            echo "Pull from manual trigger parameter."
            echo "::set-output name=commit_sha::${{ github.event.inputs.commit_sha }}"
          fi
  create_release:
    runs-on: ubuntu-latest
    needs: get_commit_sha
    steps:
    - name: Echo commit sha
      run: echo ${{ needs.get_commit_sha.outputs.commit_sha }}
    - name: Checkout commit for release
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.get_commit_sha.outputs.commit_sha }}
        fetch-depth: 0
    - name: CAT changelog and git log
      run: |
        git log --oneline --max-count=10
        cat CHANGELOG.md
    - name: Get version and change log
      run: |
        version_name=$(cat gradle.properties | grep VERSION_NAME | sed  s/VERSION_NAME=//g)
        start_line_change_log=$(grep -n $version_name CHANGELOG.md | cut -f1 -d:)
#     - name: Create release
#       uses: actions/github-script@v3
#       with:
#         github-token: ${{secrets.GITHUB_TOKEN}}
#         script: |
#           github.issues.createComment({
#             issue_number: context.issue.number,
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             body: 'ðŸ‘‹ Thanks for reporting!'
#           })
      
      
      
      
      
      
      
      
      
      
      
